#!/bin/bash

#####SCRIPT CONFIG#####
#what to build
nginxbuild=0
phpbuild=1
mysqlbuild=0

#what to configure
nginxconf=1
phpconf=1
mysqlconf=1
#####END SCRIPT CONFIG#####

scriptpath=$(readlink -f $0)
scriptdir=`dirname $scriptpath`

topdir=$PWD
srcdir=$topdir/src/
builddir=$topdir/build/

nginxver="0.7.67"
phpver="5.2.13"
eaccver="0.9.6.1"
phpfpmver="0.5.14"
zlibver="1.2.5"
opsslver="1.0.0a"
pcrever="8.10"
mysqlver="5.1.48"

mkdir -p $srcdir
mkdir -p $builddir

cd $srcdir

if [ "$nginxbuild" -eq "1" -o "$phpbuild" -eq "1" ]
then
	wget -c http://downloads.sourceforge.net/project/pcre/pcre/${pcrever}/pcre-${pcrever}.tar.gz
	if [ -e pcre-${pcrever} ]
	then
		pushd pcre-${pcrever}
		make clean
		popd
	else
		tar -xzf pcre-${pcrever}.tar.gz
	fi
	if [ "$phpbuild" -eq "1" ]
	then
		pushd pcre-${pcrever}
		./configure --prefix=${builddir}other/pcre-${pcrever} --enable-utf8 --enable-unicode-properties --enable-newline-is-any --with-match-limit=500000 --with-match-limit-recursion=500000
		make
		make install
		make clean #clean for nginx
		popd
	fi
fi
#nginx
if [ "$nginxbuild" -eq "1" ]
then
	if [ -e "nginx-${nginxver}" ]
	then
		echo "${srcdir}nginx-${nginxver} already exist"
		exit 1
	elif [ -e "${builddir}nginx-${nginxver}" ]
	then
		echo "${builddir}nginx-${nginxver} already exist"
		exit 1
	fi
	wget -c http://sysoev.ru/nginx/nginx-${nginxver}.tar.gz
	wget -c http://www.openssl.org/source/openssl-${opsslver}.tar.gz
	wget -c http://zlib.net/zlib-${zlibver}.tar.gz
	tar -xzf zlib-${zlibver}.tar.gz
	tar -xzf nginx-${nginxver}.tar.gz
	tar -xzf openssl-${opsslver}.tar.gz
	cd nginx-${nginxver}/
	./configure --prefix=${builddir}nginx-${nginxver} \
		--without-poll_module \
		--without-select_module \
		--with-http_ssl_module \
		--without-http_ssi_module \
		--without-http_userid_module \
		--without-http_autoindex_module \
		--without-http_geo_module \
		--without-http_referer_module \
		--without-mail_pop3_module \
		--without-mail_imap_module \
		--without-mail_smtp_module \
		--with-pcre=${srcdir}/pcre-${pcrever} \
		--with-zlib=${srcdir}/zlib-${zlibver} \
		--with-openssl=${srcdir}/openssl-${opsslver}
	make
	make install
	if [ "$nginxconf" -eq "1" ]
	then
		#configure main and add configs for magento
	fi
	cd ${srcdir}
fi

#php
if [ "$phpbuild" -eq "1" ]
then
	if [ -n "`autoconf --version | head -n 1 | tr -d '\n' | sed 's/Autoconf version [2-9]\.[1-9][3-9]//'`" ]
	then
		echo "Need autoconf version >= 2.13"
	fi
	if [ -e "php-${phpver}" ]
	then
		echo "${srcdir}php-${phpver} already exist"
		exit 1
	elif [ -e "${builddir}php-${phpver}" ]
	then
		echo "${builddir}php-${phpver} already exist"
		exit 1
	fi
	wget -c http://ua.php.net/get/php-${phpver}.tar.gz/from/ua2.php.net/mirror
	wget -c http://bart.eaccelerator.net/source/${eaccver}/eaccelerator-${eaccver}.tar.bz2
	wget -c http://php-fpm.org/downloads/php-${phpver}-fpm-${phpfpmver}.diff.gz
	tar -xzf php-${phpver}.tar.gz
	gzip -fdc php-${phpver}-fpm-${phpfpmver}.diff.gz > php-${phpver}-fpm-${phpfpmver}.diff
	tar -xjf eaccelerator-${eaccver}.tar.bz2
	cd php-${phpver}
	patch -p1 < ${srcdir}/php-${phpver}-fpm-${phpfpmver}.diff
	cp -r ${srcdir}/eaccelerator-${eaccver} ext/eaccelerator
	./buildconf --force
	./configure --prefix=${builddir}php-${phpver} \
		--enable-fastcgi \
		--enable-fpm \
		--disable-all \
		--enable-eaccelerator \
		--with-mysql=${builddir}mysql-${mysqlver}/ \
		--with-mysqli=${builddir}mysql-${mysqlver}/bin/mysql_config \
		--with-pcre-regex \
#		--with-pcre-dir=${builddir}other/pcre-${pcrever}#???
#		--with-gd \
#		--with-mcrypt \
#		--with-mhash \
#		--with-curl \
#		--enable-ftp \
#		--with-openssl \
#		--enable-dom \
#		--enable-sockets \
#		--with-zlib \
#		--with-pear \
#		--with-jpeg-dir \
#		--with-png-dir \
#		--with-pdo-mysql \
#		--enable-soap \
#		--enable-mbstring
	make
	make test
	make install
	if [ "$phpconf" -eq "1" ]
	then
		export phpdir=${builddir}php-${phpver}/
		${scriptdir}/conf/php-fpm.conf.sh > ${phpdir}etc/php-fpm.conf
		#also add configs to php.ini
	fi
	cd ${srcdir}
fi

#mysql
if [ "$mysqlbuild" -eq "1" ]
then
	if [ -e "mysql-${mysqlver}" ]
	then
		echo "${srcdir}mysql-${mysqlver} already exist"
		exit 1
	elif [ -e "${builddir}mysql-${mysqlver}" ]
	then
		echo "${builddir}mysql-${mysqlver} already exist"
		exit 1
	fi
	wget -c http://dev.mysql.com/get/Downloads/MySQL-${mysqlver}/mysql-${mysqlver}.tar.gz/from/http://mysql.infocom.ua/
	tar -xzf mysql-${mysqlver}.tar.gz
	export mysqldir=${builddir}mysql-${mysqlver}/ #export for mysql.conf.sh
	cd  mysql-${mysqlver}
	CFLAGS="-O3" \
		CXX=gcc \
		CXXFLAGS="-O3 -felide-constructors -fno-exceptions -fno-rtti" \
		./configure --prefix=${mysqldir} \
			--with-mysqld-ldflags=-all-static \
			--enable-assembler \
			--enable-thread-safe-client \
			--disable-shared \
			--disable-static \
			--with-charset=utf8 \
			--with-extra-charsets=ascii,cp1251,koi8r,latin1,latin2 \
			--with-plugins=innobase,myisam,partition,myisammrg \
			--with-mysqld-user=mysql \
			--with-unix-socket-path=${mysqldir}/var/mysql.sock
	make
	make install
	if [ "$mysqlconf" -eq "1" ]
	then
		mkdir -p ${mysqldir}/etc/
		mkdir -p ${mysqldir}/tmp/
		mkdir -p ${mysqldir}/var/data/
		mkdir -p ${mysqldir}/var/log/
		mkdir -p ${mysqldir}/var/log/innodb
		mkdir -p ${mysqldir}/var/innodb/
		${scriptdir}/conf/mysql.conf.sh > ${mysqldir}/etc/my.cnf
		${mysqldir}/bin/mysql_install_db --defaults-file=${mysqldir}/etc/my.cnf
		#also create db and user for magento
	fi
fi
