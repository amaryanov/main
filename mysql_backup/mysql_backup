#!/bin/sh

#Used variables: slavedir, masterdir, host, port, user, rsync, mysqlbinlog

serverdir="/home/www/server/"

rsyncopt="-vrlcpz --ignore-existing --compress-level=9"

counter=1
while [ "$counter" -le "$#" ]
do
	var=`eval echo '$'$counter`
	varname=`echo $var | sed 's/\([^=]\+\)=\(.*\)/\1/'`
	varval=`echo $var | sed 's/\([^=]\+\)=\(.*\)/\2/'`
	eval $varname='$varval' 2>/dev/null
	counter=`expr $counter + 1`
done

if [ "x$masterdir" = "x" ]
then
	echo 'Need path to master.'
	exit 1
fi

if [ "x$slavedir" = "x" ]
then
	echo 'Need path to slave.'
	exit 1
fi

if [ "x$mysqlbinlog" = "x" ]
then
	if [ -e ${serverdir}build/mysql/bin/mysqlbinlog ]
	then
		mysqlbinlog="${serverdir}build/mysql/bin/mysqlbinlog"
	elif [ "x`which mysqlbinlog`" != 'x' ]
	then
		mysqlbinlog="mysqlbinlog"
	else
		echo "Need mysqlbinlog."
		exit 1
	fi
fi

if [ "x$rsync" = "x" ]
then
	if [ -e ${serverdir}build/rsync/bin/rsync ]
	then
		rsync="${serverdir}build/rsync/bin/rsync"
	elif [ "x`which mysqlbinlog`" != 'x' ]
	then
		rsync="rsync"
	else
		echo "Need rsync."
		exit 1
	fi
	rsync="$rsync $rsyncopt"
fi

if [ "x$host" != "x" ]
then
	ssh="ssh"
	if [ "x$port" != "x" ]
	then
		ssh="$ssh -p$port"
	fi
	if [ "x$user" != "x" ]
	then
		ssh="$ssh -l$user"
	fi
	$rsync -e "$ssh" $host:$masterdir/log/bin/ $slavedir/masterlog/
else
	$rsync $masterdir/log/bin/ $slavedir/masterlog/
fi

if [ "$?" = "0" ]
then
	sqlfile="`mktemp -u $slavedir/sql/XXXXX`"
	for file in `find $slavedir/masterlog/ -size +0 -type f | sort`
	do
		echo $file
		$mysqlbinlog $file >> $sqlfile
		echo -n > $file
	done
else
	echo "Rsync error($?)."
	exit 1
fi

exit 0

